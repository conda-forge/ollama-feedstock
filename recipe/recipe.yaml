context:
  version: "0.12.1"
  cuda: ${{ "true" if cuda_compiler_version != "None" else "" }}
  cuda_build_string: cuda_${{ cuda_compiler_version | version_to_buildstring }}
  string_prefix: ${{ cuda_build_string if cuda else "cpu_" }}
  build_number: 0

package:
  name: ollama
  version: ${{ version }}

source:
  url: https://github.com/ollama/ollama/archive/refs/tags/v${{ version }}.tar.gz
  sha256: e47a68d0793607cee3afbcd8ccb8e292b6c18bb812db678a5360b786334ce7c2
  patches:
    - 0001-ggml-cuda-depends-on-ggml-base.patch
    - if: linux
      then: 0002-Add-defines-missing-in-glibc-2.17.patch

build:
  number: ${{ build_number }}
  string: ${{ string_prefix }}h${{ hash }}_${{ build_number }}
  variant:
    use_keys:
      # use cuda from the variant config, e.g. to build multiple CUDA variants
      - ${{ "cuda" if cuda }}
    # this will down-prioritize the cuda variant versus other variants of the package
    down_prioritize_variant: ${{ 1 if cuda == "true" else 0 }}
  script:
    - if: win
      then: [build.bat]
      else: [build.sh]
  skip:
    - cuda and match(cuda_compiler_version, "<12")

requirements:
  build:
    - ${{ compiler('go-cgo') }}
    - cmake
    - make
    - go-licenses ~= 1.6
    - if: win
      then:
        - ${{ stdlib('m2w64_c') }}
        - ${{ compiler('m2w64_cxx') }}
      else:
        - ${{ stdlib('c') }}
        - ${{ compiler('cxx') }}
    - if: cuda
      then:
        - ${{ compiler('cuda') }}
        - cuda-version ==${{ cuda_compiler_version }}
  host:
    - if: cuda
      then:
        - cuda-version ==${{ cuda_compiler_version }}
        - libcublas-dev
  ignore_run_exports:
    from_package:
      - if: cuda
        then: libcublas-dev
tests:
  - script:
      - ollama --version

about:
  homepage: https://ollama.com/
  repository: https://github.com/ollama/ollama
  documentation: https://github.com/ollama/ollama
  summary: Ollama CLI
  description: |
    Ollama is an easy way to get local language models running on your computer through a command-line interface.
  license: MIT
  license_file:
    - LICENSE
    - license-files/

extra:
  recipe-maintainers:
    - jmakovicka
    - sodre
    - benmoss
